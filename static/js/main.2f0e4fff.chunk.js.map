{"version":3,"sources":["utils/helpers.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["findCorrectTab","initTabs","selectedId","find","id","Tabs","tabs","selectedTabId","onTabSelected","currentTab","className","map","tab","title","isSelectedTab","classNames","onClick","href","content","App","useState","setSelectedTabId","currenTitle","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAiB,SAC5BC,EACAC,GAEA,OAAOD,EAASE,MAAK,qBAAGC,KAAgBF,M,OCK7BG,EAAsB,SAAC,GAI7B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaT,EAAeM,EAAMC,IAAkBD,EAAK,GAE/D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GACR,IAAQR,EAAcQ,EAAdR,GAAIS,EAAUD,EAAVC,MACNC,EAAgBL,EAAWL,KAAOA,EAExC,OACE,oBAEEM,UAAWK,IAAW,CACpB,YAAaD,IAEf,UAAQ,MALV,SAOE,mBACEE,QAAS,WACFF,GACHN,EAAcI,IAGlBK,KAAI,WAAMb,GACV,UAAQ,UAPV,SASGS,KAfET,UAuBf,qBACEM,UAAU,QACV,UAAQ,aAFV,SAIGD,EAAWS,cC/CPZ,EAAc,CACzB,CAAEF,GAAI,QAASS,MAAO,QAASK,QAAS,eACxC,CAAEd,GAAI,QAASS,MAAO,QAASK,QAAS,eACxC,CAAEd,GAAI,QAASS,MAAO,QAASK,QAAS,gBAG7BC,EAAU,WACrB,MAA0CC,mBAASd,EAAK,GAAGF,IAA3D,mBAAOG,EAAP,KAAsBc,EAAtB,KAEMZ,EAAaT,EAAeM,EAAMC,GAElCe,EAAcb,EAChBA,EAAWI,MACXP,EAAK,GAAGO,MAMZ,OACE,sBAAKH,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBY,KAGtB,cAAC,EAAD,CACEhB,KAAMA,EACNC,cAAeA,EACfC,cAboB,SAACI,GACzBS,EAAiBT,EAAIR,WCrBzBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2f0e4fff.chunk.js","sourcesContent":["import { Tab } from '../types/Tab';\n\nexport const findCorrectTab = (\n  initTabs: Tab[],\n  selectedId: string,\n): Tab | undefined => {\n  return initTabs.find(({ id }) => id === selectedId);\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\nimport { findCorrectTab } from '../../utils/helpers';\n\ninterface TabsProps {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: FC<TabsProps> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTab = findCorrectTab(tabs, selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n            const isSelectedTab = currentTab.id === id;\n\n            return (\n              <li\n                key={id}\n                className={classNames({\n                  'is-active': isSelectedTab,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  onClick={() => {\n                    if (!isSelectedTab) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\nimport { findCorrectTab } from './utils/helpers';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const currentTab = findCorrectTab(tabs, selectedTabId);\n\n  const currenTitle = currentTab\n    ? currentTab.title\n    : tabs[0].title;\n\n  const handleButtonClick = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${currenTitle}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleButtonClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}